import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

buildscript {
    repositories {
		mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.1.0'
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE"
    }
}


repositories {
	mavenCentral()
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.springframework.boot"
apply plugin: 'com.bmuschko.docker-remote-api'
apply plugin: 'jacoco'

version = '0.0.1'
sourceCompatibility = 1.8

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.6.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.5.8.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: '1.5.9.RELEASE'

    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client-jre7', version: '1.6.1'

    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-core', version: '1.0.0.RELEASE'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.11.267'

    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-messaging', version: '1.2.2.RELEASE'
    compile group: 'org.springframework', name: 'spring-messaging', version: '5.0.2.RELEASE'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-aws-context', version: '1.2.2.RELEASE'

    compile group: 'com.auth0', name: 'java-jwt', version: '3.2.0'

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '1.5.9.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop', version: '1.5.9.RELEASE'

    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.8.13'
    compile group: 'org.aspectj', name: 'aspectjrt', version: '1.8.13'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.5.6.RELEASE'
    testCompile group: 'org.spockframework', name: 'spock-spring', version: '1.1-groovy-2.4'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'

    compile 'com.google.guava:guava:23.6-jre'
    compile group: 'org.json', name: 'json', version: '20090211'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

}

jar { baseName = 'user-auth-ms' }

task createDockerfile(type: Dockerfile, dependsOn: build) {
    outputs.upToDateWhen { false }
    destFile = file('docker/Dockerfile')

    from 'openjdk:8'
    maintainer 'Jorge Tavares <jorge.tavares.inatel@gmail.com>'

    environmentVariable('ENV', 'dev-local')

    copyFile("${jar.archiveName}", '/home/')
    copyFile("run.sh", '/home/')
    
    defaultCommand('sh', '/home/run.sh', "/home/${jar.archiveName}")
    
    exposePort(8080)

    doLast {
        ant.move(file: jar.archivePath, tofile: "docker/${jar.archiveName}")
        ant.copy(file: 'scripts/run.sh', tofile: 'docker/run.sh')
    }
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/coverage"
    }
}

docker {
    if (System.env.containsKey('DOCKER_HOST') && System.env.containsKey('DOCKER_CERT_PATH')) {
        url = System.env.DOCKER_HOST.replace("tcp", "https")
        certPath = new File(System.env.DOCKER_CERT_PATH)
    }
}


task buildDockerImage(type: DockerBuildImage) {
	dependsOn createDockerfile
    tag = "${jar.baseName}:${project.version}"
}
